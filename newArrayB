/*
Given an array “A” of N integers and you have also defined the new array “B” as a concatenation of array “A” for an infinite number of times.
For example, if the given array “A” is [1,2,3] then, infinite array “B” is [1,2,3,1,2,3,1,2,3,.......].
Now you are given Q queries, each query consists of two integers “L“ and “R”(1-based indexing). Your task is to find the sum of the subarray from index “L” to “R” (both inclusive) in the infinite array “B” for each query.

Sample Input 1 :
1
3
1 2 3
2
1 3
1 5
Sample Output 1 :
6 9

*/
import java.util.*;

class cse {
    public static void main(String arg[]) {
        Scanner sc = new Scanner(System.in);
        int n=sc.nextInt();
        int arr[]=new int[n];
        for(int i=0;i<n;i++){
            arr[i]=sc.nextInt();
        }
        int times=sc.nextInt();
        for(int i=0;i<times;i++){
            int l=sc.nextInt();
            int r=sc.nextInt();
            int sum=0;
            for(int j=l-1;j<=r-1;j++){
                sum+=arr[j%n];
            }
            System.out.println(sum);
        }
    }
}
