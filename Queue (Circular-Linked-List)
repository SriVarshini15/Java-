import java.io.*;
import java.util.*;

class Node{
    int data;
    Node left=null;
    Node right=null;
    Node(int data){
        this.data=data;
    }
}

class cse{
    Node front=null;
    Node rear =null;

    public void addItem(Scanner sc){
        int data=sc.nextInt();
        Node newNode =new Node(data);
        if(front==null){
            front=newNode;
            rear=newNode;
        }else{
            rear.right=newNode;
            newNode.left=rear;
            rear=newNode;
            rear.right=front;
            front.left=newNode;

        }
    }
    public void removeItem(){
        if (front == null) {
            System.out.println("Queue Underflow...");
            return;
        }

        if(front==rear){
            front = rear = null;
            return;
        }
        front.right.left=front.left;
        front=front.right;
        rear.right=front;
        if(front==rear){
            front.right=null;
            front.left=null;
        }

    }
    public void printForward(){
        if (front == null) {
            System.out.println("Queue is empty");
            return;
        }
        Node temp=front;
        if(front==rear){
            System.out.println(temp.left+" "+temp.data+" "+temp.right);
            return;
        }
        do{
            System.out.println(temp.left+" "+temp.data+" "+temp.right);
            temp=temp.right;
        }while(temp!=front);
         System.out.println();
    }

    public void printBackward(){
        if (rear == null) {
            System.out.println("Queue is empty");
            return;
        }
        Node temp=rear;
        if(front==rear){
            System.out.println(temp.left+" "+temp.data+" "+temp.right);
            return;
        }
        do{
            System.out.println(temp.left+" "+temp.data+" "+temp.right);
            temp=temp.left;
        }while(temp!=rear);
        System.out.println();
    }
    public static void main(String arg[]){
        cse cs=new cse();
        int option=1;
        Scanner sc=new Scanner(System.in);
        while(option!=-1){
            System.out.println("Enter 1.add 2.delete 3.printForward 4.printBackward else -1 to exit: ");
            option=sc.nextInt();
            switch(option){
                case 1:
                    cs.addItem(sc);
                    break;
                case 2:
                    cs.removeItem();
                    break;
                case 3:
                    cs.printForward();
                    break;
                case 4:
                    cs.printBackward();
                    break;
                case -1:
                    System.out.println("Exiting...");
                    break;
                default:
                    System.out.println("Invalid option. Try again.");

            }
        }
        sc.close();
    }
}
